#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

###############ÊîπÂêçÂ≠ó##############
name: Redmi-AX6000-padavanonly2410

on:
  repository_dispatch:
  #schedule:
  #  - cron: 30 22 * * *
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  FEEDS_CONF: padavanonly2410/Redmi-AX6000/feeds.conf.default
  CONFIG_FILE: padavanonly2410/Redmi-AX6000/AX6Kpadavanonly2410.config
  DIY_P1_SH: padavanonly2410/Redmi-AX6000/diy-part1.sh
  DIY_P2_SH: padavanonly2410/Redmi-AX6000/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  ###############ÊîπÂêçÂ≠ó##############
  OPENWRT_NAME: padavanonly2410
  # DEVICE_NAME: xiaomi_redmi-router-ax6000

jobs:
  build_firmware:
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-latest

    steps:
    - name: Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@v4
      
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        # sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev rename
        sudo -E apt-get -qq install gettext   #po2lmo
        # sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        #install lib32gcc1
        # sudo -E apt-get -qq install libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5
        # add libfuse
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p ${GITHUB_WORKSPACE}/workdir
        sudo ln -sf ${GITHUB_WORKSPACE}/workdir /workdir
        sudo chown $USER:$GROUPS ${GITHUB_WORKSPACE}/workdir
        sudo chown $USER:$GROUPS /workdir

    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Âä†ËΩΩfeeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Êõ¥Êñ∞ & ÂÆâË£Ö feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        # git clone -b master --single-branch https://github.com/immortalwrt/packages.git packages_master
        ./scripts/feeds install -a

    - name: Âä†ËΩΩconfig & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    # - name: SSHÈìæÊé•ÁÆ°ÁêÜ
      # uses: P3TERX/ssh2actions@v1.0.0
      # if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      # env:
        # TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        # TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: ‰∏ãËΩΩÂÆâË£ÖÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        #grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_([^=]+)=y$/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo ${{ env.DEVICE_NAME }}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*TARGET_.*_(.*)_DEVICE_.*=y/\1/' > TARGET_NAME
        [ -s TARGET_NAME ] && echo "TARGET_NAME=$(cat TARGET_NAME)" >> $GITHUB_ENV
        echo ${{ env.TARGET_NAME }}
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

    - name: Êü•ÁúãÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    #- name: ‰∏ä‰º† bin ÁõÆÂΩï
      #uses: actions/upload-artifact@main
      #if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      #with:
      #  name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
      #  path: openwrt/bin

    - name: Êï¥ÁêÜÊñá‰ª∂Âπ∂ÈáçÂëΩÂêç
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rename 's/.*${{ env.TARGET_NAME }}/${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}/' *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞github
      uses: actions/upload-artifact@v4
      # uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "Áî±Ë°∑ÊÑüË∞¢ÊâÄÊúâ‰∏∫openwrtÊó†ÁßÅÂ•âÁåÆÁöÑÂ§ß‰Ω¨‰ª¨" >> release.txt
        echo "The default IP address is 192.168.XXX.1" >> release.txt
        echo "## padavanonly-24.10 uboot layout " >> release.txt
        echo "------" >> release.txt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "$useVersionInfo" >> release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
        echo "status=success"
        echo "status=success" >> $GITHUB_OUTPUT

    - name: ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v2
      # workaround for https://github.com/softprops/action-gh-release/issues/628
      # uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.FILE_DATE }}_${{ env.OPENWRT_NAME }}_${{ env.DEVICE_NAME }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    # - name: Delete workflow runs
      # uses: Mattraks/delete-workflow-runs@main
      # with:
        # retain_days: 0
        # keep_minimum_runs: 8

    # - name: Remove old Releases
      # uses: dev-drprasad/delete-older-releases@master
      # if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      # with:
        # keep_latest: 8
        # delete_tags: true
      # env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
